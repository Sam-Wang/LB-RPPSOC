ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"PWM_1.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	PWM_1_initVar
  19              		.bss
  20              		.type	PWM_1_initVar, %object
  21              		.size	PWM_1_initVar, 1
  22              	PWM_1_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.PWM_1_Start,"ax",%progbits
  25              		.align	2
  26              		.global	PWM_1_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	PWM_1_Start, %function
  30              	PWM_1_Start:
  31              	.LFB0:
  32              		.file 1 "Generated_Source\\PSoC5\\PWM_1.c"
   1:Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM_1.c **** * File Name: PWM_1.c
   3:Generated_Source\PSoC5/PWM_1.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM_1.c **** *
   5:Generated_Source\PSoC5/PWM_1.c **** * Description:
   6:Generated_Source\PSoC5/PWM_1.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWM_1.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWM_1.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWM_1.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWM_1.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWM_1.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWM_1.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWM_1.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWM_1.c **** *
  15:Generated_Source\PSoC5/PWM_1.c **** * Note:
  16:Generated_Source\PSoC5/PWM_1.c **** *
  17:Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWM_1.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWM_1.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWM_1.c **** 
  24:Generated_Source\PSoC5/PWM_1.c **** #include "PWM_1.h"
  25:Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 2


  26:Generated_Source\PSoC5/PWM_1.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWM_1.c **** #ifdef PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWM_1.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWM_1.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWM_1.c **** #endif /* PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:Generated_Source\PSoC5/PWM_1.c **** 
  32:Generated_Source\PSoC5/PWM_1.c **** uint8 PWM_1_initVar = 0u;
  33:Generated_Source\PSoC5/PWM_1.c **** 
  34:Generated_Source\PSoC5/PWM_1.c **** 
  35:Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Start
  37:Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWM_1.c **** *
  39:Generated_Source\PSoC5/PWM_1.c **** * Summary:
  40:Generated_Source\PSoC5/PWM_1.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWM_1.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWM_1.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWM_1.c **** *
  44:Generated_Source\PSoC5/PWM_1.c **** * Parameters:
  45:Generated_Source\PSoC5/PWM_1.c **** *  None
  46:Generated_Source\PSoC5/PWM_1.c **** *
  47:Generated_Source\PSoC5/PWM_1.c **** * Return:
  48:Generated_Source\PSoC5/PWM_1.c **** *  None
  49:Generated_Source\PSoC5/PWM_1.c **** *
  50:Generated_Source\PSoC5/PWM_1.c **** * Global variables:
  51:Generated_Source\PSoC5/PWM_1.c **** *  PWM_1_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWM_1.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWM_1.c **** *
  54:Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Start(void) 
  56:Generated_Source\PSoC5/PWM_1.c **** {
  33              		.loc 1 56 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  57:Generated_Source\PSoC5/PWM_1.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWM_1.c ****     if(PWM_1_initVar == 0u)
  43              		.loc 1 58 0
  44 0004 054B     		ldr	r3, .L3
  45 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  46 0008 002B     		cmp	r3, #0
  47 000a 04D1     		bne	.L2
  59:Generated_Source\PSoC5/PWM_1.c ****     {
  60:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_Init();
  48              		.loc 1 60 0
  49 000c FFF7FEFF 		bl	PWM_1_Init
  61:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_initVar = 1u;
  50              		.loc 1 61 0
  51 0010 024B     		ldr	r3, .L3
  52 0012 0122     		movs	r2, #1
  53 0014 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 3


  54              	.L2:
  62:Generated_Source\PSoC5/PWM_1.c ****     }
  63:Generated_Source\PSoC5/PWM_1.c ****     PWM_1_Enable();
  55              		.loc 1 63 0
  56 0016 FFF7FEFF 		bl	PWM_1_Enable
  64:Generated_Source\PSoC5/PWM_1.c **** 
  65:Generated_Source\PSoC5/PWM_1.c **** }
  57              		.loc 1 65 0
  58 001a 80BD     		pop	{r7, pc}
  59              	.L4:
  60              		.align	2
  61              	.L3:
  62 001c 00000000 		.word	PWM_1_initVar
  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	PWM_1_Start, .-PWM_1_Start
  66              		.section	.text.PWM_1_Init,"ax",%progbits
  67              		.align	2
  68              		.global	PWM_1_Init
  69              		.thumb
  70              		.thumb_func
  71              		.type	PWM_1_Init, %function
  72              	PWM_1_Init:
  73              	.LFB1:
  66:Generated_Source\PSoC5/PWM_1.c **** 
  67:Generated_Source\PSoC5/PWM_1.c **** 
  68:Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Init
  70:Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWM_1.c **** *
  72:Generated_Source\PSoC5/PWM_1.c **** * Summary:
  73:Generated_Source\PSoC5/PWM_1.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWM_1.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWM_1.c **** *  PWM_1_Start().
  76:Generated_Source\PSoC5/PWM_1.c **** *
  77:Generated_Source\PSoC5/PWM_1.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM_1.c **** *  None
  79:Generated_Source\PSoC5/PWM_1.c **** *
  80:Generated_Source\PSoC5/PWM_1.c **** * Return:
  81:Generated_Source\PSoC5/PWM_1.c **** *  None
  82:Generated_Source\PSoC5/PWM_1.c **** *
  83:Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Init(void) 
  85:Generated_Source\PSoC5/PWM_1.c **** {
  74              		.loc 1 85 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78 0000 80B5     		push	{r7, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 7, -8
  81              		.cfi_offset 14, -4
  82 0002 82B0     		sub	sp, sp, #8
  83              		.cfi_def_cfa_offset 16
  84 0004 00AF     		add	r7, sp, #0
  85              		.cfi_def_cfa_register 7
  86:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction || PWM_1_UseControl)
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 4


  87:Generated_Source\PSoC5/PWM_1.c ****         uint8 ctrl;
  88:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction || PWM_1_UseControl) */
  89:Generated_Source\PSoC5/PWM_1.c **** 
  90:Generated_Source\PSoC5/PWM_1.c ****     #if(!PWM_1_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UseStatus)
  92:Generated_Source\PSoC5/PWM_1.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWM_1.c ****             uint8 PWM_1_interruptState;
  94:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
  95:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWM_1.c **** 
  97:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWM_1.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CFG0_MODE;
 100:Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_DeadBand2_4)
 101:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL |= PWM_1_CFG0_DB;
 102:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWM_1.c **** 
 104:Generated_Source\PSoC5/PWM_1.c ****         ctrl = PWM_1_CONTROL3 & ((uint8 )(~PWM_1_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL3 = ctrl | PWM_1_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/PWM_1.c **** 
 107:Generated_Source\PSoC5/PWM_1.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_RT1_MASK));
 109:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNC;
 110:Generated_Source\PSoC5/PWM_1.c **** 
 111:Generated_Source\PSoC5/PWM_1.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNCDSI_EN;
 114:Generated_Source\PSoC5/PWM_1.c **** 
 115:Generated_Source\PSoC5/PWM_1.c ****     #elif (PWM_1_UseControl)
 116:Generated_Source\PSoC5/PWM_1.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWM_1.c ****         ctrl = PWM_1_CONTROL & ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)) &
  86              		.loc 1 117 0
  87 0006 154B     		ldr	r3, .L6
  88 0008 1B78     		ldrb	r3, [r3]
  89 000a DBB2     		uxtb	r3, r3
  90 000c 23F03F03 		bic	r3, r3, #63
  91 0010 FB71     		strb	r3, [r7, #7]
 118:Generated_Source\PSoC5/PWM_1.c ****                 ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL = ctrl | PWM_1_DEFAULT_COMPARE2_MODE |
  92              		.loc 1 119 0
  93 0012 124A     		ldr	r2, .L6
  94 0014 FB79     		ldrb	r3, [r7, #7]
  95 0016 1370     		strb	r3, [r2]
 120:Generated_Source\PSoC5/PWM_1.c ****                                    PWM_1_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWM_1.c **** 
 123:Generated_Source\PSoC5/PWM_1.c ****     #if (!PWM_1_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_Resolution == 8)
 125:Generated_Source\PSoC5/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/PWM_1.c ****         #else /* (PWM_1_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
  96              		.loc 1 129 0
  97 0018 114A     		ldr	r2, .L6+4
  98 001a 114B     		ldr	r3, .L6+4
  99 001c 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 5


 100 001e DBB2     		uxtb	r3, r3
 101 0020 43F00103 		orr	r3, r3, #1
 102 0024 DBB2     		uxtb	r3, r3
 103 0026 1370     		strb	r3, [r2]
 130:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 104              		.loc 1 130 0
 105 0028 0E4A     		ldr	r2, .L6+8
 106 002a 0E4B     		ldr	r3, .L6+8
 107 002c 1B78     		ldrb	r3, [r3]
 108 002e DBB2     		uxtb	r3, r3
 109 0030 43F00103 		orr	r3, r3, #1
 110 0034 DBB2     		uxtb	r3, r3
 111 0036 1370     		strb	r3, [r2]
 131:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_Resolution == 8) */
 132:Generated_Source\PSoC5/PWM_1.c **** 
 133:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_INIT_PERIOD_VALUE);
 112              		.loc 1 133 0
 113 0038 4FF6FF70 		movw	r0, #65535
 114 003c FFF7FEFF 		bl	PWM_1_WriteCounter
 134:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWM_1.c **** 
 136:Generated_Source\PSoC5/PWM_1.c ****     PWM_1_WritePeriod(PWM_1_INIT_PERIOD_VALUE);
 115              		.loc 1 136 0
 116 0040 4FF6FF70 		movw	r0, #65535
 117 0044 FFF7FEFF 		bl	PWM_1_WritePeriod
 137:Generated_Source\PSoC5/PWM_1.c **** 
 138:Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/PWM_1.c ****         #else
 141:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare1(PWM_1_INIT_COMPARE_VALUE1);
 118              		.loc 1 141 0
 119 0048 0120     		movs	r0, #1
 120 004a FFF7FEFF 		bl	PWM_1_WriteCompare1
 142:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare2(PWM_1_INIT_COMPARE_VALUE2);
 121              		.loc 1 142 0
 122 004e 6420     		movs	r0, #100
 123 0050 FFF7FEFF 		bl	PWM_1_WriteCompare2
 143:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWM_1.c **** 
 145:Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_KillModeMinTime)
 146:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteKillTime(PWM_1_MinimumKillTime);
 147:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWM_1.c **** 
 149:Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_DeadBandUsed)
 150:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteDeadTime(PWM_1_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWM_1.c **** 
 153:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 156:Generated_Source\PSoC5/PWM_1.c **** 
 157:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWM_1.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/PWM_1.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL2 |= PWM_1_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/PWM_1.c ****     #else
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 6


 163:Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UseStatus)
 164:Generated_Source\PSoC5/PWM_1.c **** 
 165:Generated_Source\PSoC5/PWM_1.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWM_1.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/PWM_1.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_STATUS_AUX_CTRL |= PWM_1_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/PWM_1.c **** 
 171:Generated_Source\PSoC5/PWM_1.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWM_1.c ****             CyExitCriticalSection(PWM_1_interruptState);
 173:Generated_Source\PSoC5/PWM_1.c **** 
 174:Generated_Source\PSoC5/PWM_1.c ****             /* Clear the FIFO to enable the PWM_1_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWM_1.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_ClearFIFO();
 177:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
 178:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 179:Generated_Source\PSoC5/PWM_1.c **** }
 124              		.loc 1 179 0
 125 0054 0837     		adds	r7, r7, #8
 126              		.cfi_def_cfa_offset 8
 127 0056 BD46     		mov	sp, r7
 128              		.cfi_def_cfa_register 13
 129              		@ sp needed
 130 0058 80BD     		pop	{r7, pc}
 131              	.L7:
 132 005a 00BF     		.align	2
 133              	.L6:
 134 005c 7D640040 		.word	1073767549
 135 0060 9C640040 		.word	1073767580
 136 0064 9D640040 		.word	1073767581
 137              		.cfi_endproc
 138              	.LFE1:
 139              		.size	PWM_1_Init, .-PWM_1_Init
 140              		.section	.text.PWM_1_Enable,"ax",%progbits
 141              		.align	2
 142              		.global	PWM_1_Enable
 143              		.thumb
 144              		.thumb_func
 145              		.type	PWM_1_Enable, %function
 146              	PWM_1_Enable:
 147              	.LFB2:
 180:Generated_Source\PSoC5/PWM_1.c **** 
 181:Generated_Source\PSoC5/PWM_1.c **** 
 182:Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Enable
 184:Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 185:Generated_Source\PSoC5/PWM_1.c **** *
 186:Generated_Source\PSoC5/PWM_1.c **** * Summary:
 187:Generated_Source\PSoC5/PWM_1.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWM_1.c **** *
 189:Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 190:Generated_Source\PSoC5/PWM_1.c **** *  None
 191:Generated_Source\PSoC5/PWM_1.c **** *
 192:Generated_Source\PSoC5/PWM_1.c **** * Return:
 193:Generated_Source\PSoC5/PWM_1.c **** *  None
 194:Generated_Source\PSoC5/PWM_1.c **** *
 195:Generated_Source\PSoC5/PWM_1.c **** * Side Effects:
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 7


 196:Generated_Source\PSoC5/PWM_1.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWM_1.c **** *
 198:Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Enable(void) 
 200:Generated_Source\PSoC5/PWM_1.c **** {
 148              		.loc 1 200 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 1, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 153 0000 80B4     		push	{r7}
 154              		.cfi_def_cfa_offset 4
 155              		.cfi_offset 7, -4
 156 0002 00AF     		add	r7, sp, #0
 157              		.cfi_def_cfa_register 7
 201:Generated_Source\PSoC5/PWM_1.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE |= PWM_1_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWM_1.c **** 
 207:Generated_Source\PSoC5/PWM_1.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CTRL_ENABLE;
 158              		.loc 1 209 0
 159 0004 054A     		ldr	r2, .L9
 160 0006 054B     		ldr	r3, .L9
 161 0008 1B78     		ldrb	r3, [r3]
 162 000a DBB2     		uxtb	r3, r3
 163 000c 63F07F03 		orn	r3, r3, #127
 164 0010 DBB2     		uxtb	r3, r3
 165 0012 1370     		strb	r3, [r2]
 210:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 211:Generated_Source\PSoC5/PWM_1.c **** }
 166              		.loc 1 211 0
 167 0014 BD46     		mov	sp, r7
 168              		.cfi_def_cfa_register 13
 169              		@ sp needed
 170 0016 5DF8047B 		ldr	r7, [sp], #4
 171              		.cfi_restore 7
 172              		.cfi_def_cfa_offset 0
 173 001a 7047     		bx	lr
 174              	.L10:
 175              		.align	2
 176              	.L9:
 177 001c 7D640040 		.word	1073767549
 178              		.cfi_endproc
 179              	.LFE2:
 180              		.size	PWM_1_Enable, .-PWM_1_Enable
 181              		.section	.text.PWM_1_Stop,"ax",%progbits
 182              		.align	2
 183              		.global	PWM_1_Stop
 184              		.thumb
 185              		.thumb_func
 186              		.type	PWM_1_Stop, %function
 187              	PWM_1_Stop:
 188              	.LFB3:
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 8


 212:Generated_Source\PSoC5/PWM_1.c **** 
 213:Generated_Source\PSoC5/PWM_1.c **** 
 214:Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Stop
 216:Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWM_1.c **** *
 218:Generated_Source\PSoC5/PWM_1.c **** * Summary:
 219:Generated_Source\PSoC5/PWM_1.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWM_1.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWM_1.c **** *
 222:Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 223:Generated_Source\PSoC5/PWM_1.c **** *  None
 224:Generated_Source\PSoC5/PWM_1.c **** *
 225:Generated_Source\PSoC5/PWM_1.c **** * Return:
 226:Generated_Source\PSoC5/PWM_1.c **** *  None
 227:Generated_Source\PSoC5/PWM_1.c **** *
 228:Generated_Source\PSoC5/PWM_1.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWM_1.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWM_1.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWM_1.c **** *
 232:Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 233:Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Stop(void) 
 234:Generated_Source\PSoC5/PWM_1.c **** {
 189              		.loc 1 234 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194 0000 80B4     		push	{r7}
 195              		.cfi_def_cfa_offset 4
 196              		.cfi_offset 7, -4
 197 0002 00AF     		add	r7, sp, #0
 198              		.cfi_def_cfa_register 7
 235:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_ENABLE));
 199              		.loc 1 236 0
 200 0004 054A     		ldr	r2, .L12
 201 0006 054B     		ldr	r3, .L12
 202 0008 1B78     		ldrb	r3, [r3]
 203 000a DBB2     		uxtb	r3, r3
 204 000c 03F07F03 		and	r3, r3, #127
 205 0010 DBB2     		uxtb	r3, r3
 206 0012 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWM_1.c **** 
 239:Generated_Source\PSoC5/PWM_1.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE &= ((uint8)(~PWM_1_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_1_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWM_1.c **** }
 207              		.loc 1 244 0
 208 0014 BD46     		mov	sp, r7
 209              		.cfi_def_cfa_register 13
 210              		@ sp needed
 211 0016 5DF8047B 		ldr	r7, [sp], #4
 212              		.cfi_restore 7
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 9


 213              		.cfi_def_cfa_offset 0
 214 001a 7047     		bx	lr
 215              	.L13:
 216              		.align	2
 217              	.L12:
 218 001c 7D640040 		.word	1073767549
 219              		.cfi_endproc
 220              	.LFE3:
 221              		.size	PWM_1_Stop, .-PWM_1_Stop
 222              		.section	.text.PWM_1_WriteCounter,"ax",%progbits
 223              		.align	2
 224              		.global	PWM_1_WriteCounter
 225              		.thumb
 226              		.thumb_func
 227              		.type	PWM_1_WriteCounter, %function
 228              	PWM_1_WriteCounter:
 229              	.LFB4:
 245:Generated_Source\PSoC5/PWM_1.c **** 
 246:Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 248:Generated_Source\PSoC5/PWM_1.c **** 
 249:Generated_Source\PSoC5/PWM_1.c **** 
 250:Generated_Source\PSoC5/PWM_1.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode
 252:Generated_Source\PSoC5/PWM_1.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWM_1.c ****         *
 254:Generated_Source\PSoC5/PWM_1.c ****         * Summary:
 255:Generated_Source\PSoC5/PWM_1.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWM_1.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/PWM_1.c ****         *
 258:Generated_Source\PSoC5/PWM_1.c ****         * Parameters:
 259:Generated_Source\PSoC5/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/PWM_1.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWM_1.c ****         *
 262:Generated_Source\PSoC5/PWM_1.c ****         * Return:
 263:Generated_Source\PSoC5/PWM_1.c ****         *  None
 264:Generated_Source\PSoC5/PWM_1.c ****         *
 265:Generated_Source\PSoC5/PWM_1.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWM_1.c ****         void PWM_1_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWM_1.c ****         {
 268:Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWM_1.c **** 
 270:Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SH
 272:Generated_Source\PSoC5/PWM_1.c ****                 #else
 273:Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWM_1.c **** 
 276:Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL3 &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/PWM_1.c **** 
 279:Generated_Source\PSoC5/PWM_1.c ****             #elif (PWM_1_UseControl)
 280:Generated_Source\PSoC5/PWM_1.c **** 
 281:Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_S
 283:Generated_Source\PSoC5/PWM_1.c ****                                                 PWM_1_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWM_1.c ****                 #else
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 10


 285:Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode1masked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/PWM_1.c **** 
 288:Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_S
 290:Generated_Source\PSoC5/PWM_1.c ****                                                PWM_1_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWM_1.c ****                 #else
 292:Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode2masked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWM_1.c **** 
 295:Generated_Source\PSoC5/PWM_1.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~(PWM_1_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWM_1.c ****                                             PWM_1_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWM_1.c **** 
 300:Generated_Source\PSoC5/PWM_1.c ****             #else
 301:Generated_Source\PSoC5/PWM_1.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWM_1.c ****         }
 304:Generated_Source\PSoC5/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 305:Generated_Source\PSoC5/PWM_1.c **** 
 306:Generated_Source\PSoC5/PWM_1.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWM_1.c **** 
 308:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 309:Generated_Source\PSoC5/PWM_1.c **** 
 310:Generated_Source\PSoC5/PWM_1.c **** 
 311:Generated_Source\PSoC5/PWM_1.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode1
 313:Generated_Source\PSoC5/PWM_1.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/PWM_1.c ****         *
 315:Generated_Source\PSoC5/PWM_1.c ****         * Summary:
 316:Generated_Source\PSoC5/PWM_1.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/PWM_1.c ****         *
 318:Generated_Source\PSoC5/PWM_1.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWM_1.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC5/PWM_1.c ****         *
 322:Generated_Source\PSoC5/PWM_1.c ****         * Return:
 323:Generated_Source\PSoC5/PWM_1.c ****         *  None
 324:Generated_Source\PSoC5/PWM_1.c ****         *
 325:Generated_Source\PSoC5/PWM_1.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWM_1.c ****         void PWM_1_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWM_1.c ****         {
 328:Generated_Source\PSoC5/PWM_1.c ****             #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWM_1.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SHIFT)
 330:Generated_Source\PSoC5/PWM_1.c ****                                            PWM_1_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/PWM_1.c ****             #else
 332:Generated_Source\PSoC5/PWM_1.c ****                 uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/PWM_1.c ****             #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWM_1.c **** 
 335:Generated_Source\PSoC5/PWM_1.c ****             #if (PWM_1_UseControl)
 336:Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_UseControl) */
 339:Generated_Source\PSoC5/PWM_1.c ****         }
 340:Generated_Source\PSoC5/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 341:Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 11


 342:Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_CompareMode2SW)
 343:Generated_Source\PSoC5/PWM_1.c **** 
 344:Generated_Source\PSoC5/PWM_1.c **** 
 345:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_SetCompareMode2
 347:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWM_1.c ****     *
 349:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 350:Generated_Source\PSoC5/PWM_1.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWM_1.c ****     *
 352:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWM_1.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWM_1.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWM_1.c ****     *
 356:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 357:Generated_Source\PSoC5/PWM_1.c ****     *  None
 358:Generated_Source\PSoC5/PWM_1.c ****     *
 359:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWM_1.c ****     {
 362:Generated_Source\PSoC5/PWM_1.c **** 
 363:Generated_Source\PSoC5/PWM_1.c ****         #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWM_1.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC5/PWM_1.c ****                                                  PWM_1_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWM_1.c ****         #else
 367:Generated_Source\PSoC5/PWM_1.c ****             uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWM_1.c **** 
 370:Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_UseControl)
 371:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseControl) */
 374:Generated_Source\PSoC5/PWM_1.c ****     }
 375:Generated_Source\PSoC5/PWM_1.c ****     #endif /*PWM_1_CompareMode2SW */
 376:Generated_Source\PSoC5/PWM_1.c **** 
 377:Generated_Source\PSoC5/PWM_1.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC5/PWM_1.c **** 
 379:Generated_Source\PSoC5/PWM_1.c **** 
 380:Generated_Source\PSoC5/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWM_1.c **** 
 382:Generated_Source\PSoC5/PWM_1.c **** 
 383:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCounter
 385:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWM_1.c ****     *
 387:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 388:Generated_Source\PSoC5/PWM_1.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWM_1.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWM_1.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWM_1.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/PWM_1.c ****     *
 393:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWM_1.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWM_1.c ****     *
 396:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 397:Generated_Source\PSoC5/PWM_1.c ****     *  None
 398:Generated_Source\PSoC5/PWM_1.c ****     *
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 12


 399:Generated_Source\PSoC5/PWM_1.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWM_1.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/PWM_1.c ****     *
 402:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC5/PWM_1.c ****                                        
 405:Generated_Source\PSoC5/PWM_1.c ****     {
 230              		.loc 1 405 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 8
 233              		@ frame_needed = 1, uses_anonymous_args = 0
 234              		@ link register save eliminated.
 235 0000 80B4     		push	{r7}
 236              		.cfi_def_cfa_offset 4
 237              		.cfi_offset 7, -4
 238 0002 83B0     		sub	sp, sp, #12
 239              		.cfi_def_cfa_offset 16
 240 0004 00AF     		add	r7, sp, #0
 241              		.cfi_def_cfa_register 7
 242 0006 0346     		mov	r3, r0
 243 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 406:Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG16(PWM_1_COUNTER_LSB_PTR, counter);
 244              		.loc 1 406 0
 245 000a 044A     		ldr	r2, .L15
 246 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 247 000e 1380     		strh	r3, [r2]	@ movhi
 407:Generated_Source\PSoC5/PWM_1.c ****     }
 248              		.loc 1 407 0
 249 0010 0C37     		adds	r7, r7, #12
 250              		.cfi_def_cfa_offset 4
 251 0012 BD46     		mov	sp, r7
 252              		.cfi_def_cfa_register 13
 253              		@ sp needed
 254 0014 5DF8047B 		ldr	r7, [sp], #4
 255              		.cfi_restore 7
 256              		.cfi_def_cfa_offset 0
 257 0018 7047     		bx	lr
 258              	.L16:
 259 001a 00BF     		.align	2
 260              	.L15:
 261 001c 18680040 		.word	1073768472
 262              		.cfi_endproc
 263              	.LFE4:
 264              		.size	PWM_1_WriteCounter, .-PWM_1_WriteCounter
 265              		.section	.text.PWM_1_ReadCounter,"ax",%progbits
 266              		.align	2
 267              		.global	PWM_1_ReadCounter
 268              		.thumb
 269              		.thumb_func
 270              		.type	PWM_1_ReadCounter, %function
 271              	PWM_1_ReadCounter:
 272              	.LFB5:
 408:Generated_Source\PSoC5/PWM_1.c **** 
 409:Generated_Source\PSoC5/PWM_1.c **** 
 410:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCounter
 412:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 13


 413:Generated_Source\PSoC5/PWM_1.c ****     *
 414:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 415:Generated_Source\PSoC5/PWM_1.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWM_1.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWM_1.c ****     *
 418:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWM_1.c ****     *  None
 420:Generated_Source\PSoC5/PWM_1.c ****     *
 421:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 422:Generated_Source\PSoC5/PWM_1.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWM_1.c ****     *
 424:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWM_1.c ****     {
 273              		.loc 1 426 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 1, uses_anonymous_args = 0
 277              		@ link register save eliminated.
 278 0000 80B4     		push	{r7}
 279              		.cfi_def_cfa_offset 4
 280              		.cfi_offset 7, -4
 281 0002 00AF     		add	r7, sp, #0
 282              		.cfi_def_cfa_register 7
 427:Generated_Source\PSoC5/PWM_1.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWM_1.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWM_1.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWM_1.c ****           (void)CY_GET_REG8(PWM_1_COUNTERCAP_LSB_PTR_8BIT);
 283              		.loc 1 430 0
 284 0004 044B     		ldr	r3, .L19
 285 0006 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC5/PWM_1.c **** 
 432:Generated_Source\PSoC5/PWM_1.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_CAPTURE_LSB_PTR));
 286              		.loc 1 433 0
 287 0008 044B     		ldr	r3, .L19+4
 288 000a 1B88     		ldrh	r3, [r3]	@ movhi
 289 000c 9BB2     		uxth	r3, r3
 434:Generated_Source\PSoC5/PWM_1.c ****     }
 290              		.loc 1 434 0
 291 000e 1846     		mov	r0, r3
 292 0010 BD46     		mov	sp, r7
 293              		.cfi_def_cfa_register 13
 294              		@ sp needed
 295 0012 5DF8047B 		ldr	r7, [sp], #4
 296              		.cfi_restore 7
 297              		.cfi_def_cfa_offset 0
 298 0016 7047     		bx	lr
 299              	.L20:
 300              		.align	2
 301              	.L19:
 302 0018 1C640040 		.word	1073767452
 303 001c B8680040 		.word	1073768632
 304              		.cfi_endproc
 305              	.LFE5:
 306              		.size	PWM_1_ReadCounter, .-PWM_1_ReadCounter
 307              		.section	.text.PWM_1_WritePeriod,"ax",%progbits
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 14


 308              		.align	2
 309              		.global	PWM_1_WritePeriod
 310              		.thumb
 311              		.thumb_func
 312              		.type	PWM_1_WritePeriod, %function
 313              	PWM_1_WritePeriod:
 314              	.LFB6:
 435:Generated_Source\PSoC5/PWM_1.c **** 
 436:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseStatus)
 437:Generated_Source\PSoC5/PWM_1.c **** 
 438:Generated_Source\PSoC5/PWM_1.c **** 
 439:Generated_Source\PSoC5/PWM_1.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWM_1.c ****         * Function Name: PWM_1_ClearFIFO
 441:Generated_Source\PSoC5/PWM_1.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWM_1.c ****         *
 443:Generated_Source\PSoC5/PWM_1.c ****         * Summary:
 444:Generated_Source\PSoC5/PWM_1.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWM_1.c ****         *
 446:Generated_Source\PSoC5/PWM_1.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWM_1.c ****         *  None
 448:Generated_Source\PSoC5/PWM_1.c ****         *
 449:Generated_Source\PSoC5/PWM_1.c ****         * Return:
 450:Generated_Source\PSoC5/PWM_1.c ****         *  None
 451:Generated_Source\PSoC5/PWM_1.c ****         *
 452:Generated_Source\PSoC5/PWM_1.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWM_1.c ****         void PWM_1_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWM_1.c ****         {
 455:Generated_Source\PSoC5/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/PWM_1.c ****             {
 457:Generated_Source\PSoC5/PWM_1.c ****                 (void)PWM_1_ReadCapture();
 458:Generated_Source\PSoC5/PWM_1.c ****             }
 459:Generated_Source\PSoC5/PWM_1.c ****         }
 460:Generated_Source\PSoC5/PWM_1.c **** 
 461:Generated_Source\PSoC5/PWM_1.c ****     #endif /* PWM_1_UseStatus */
 462:Generated_Source\PSoC5/PWM_1.c **** 
 463:Generated_Source\PSoC5/PWM_1.c **** #endif /* !PWM_1_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWM_1.c **** 
 465:Generated_Source\PSoC5/PWM_1.c **** 
 466:Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_WritePeriod
 468:Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWM_1.c **** *
 470:Generated_Source\PSoC5/PWM_1.c **** * Summary:
 471:Generated_Source\PSoC5/PWM_1.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWM_1.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWM_1.c **** *
 474:Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 475:Generated_Source\PSoC5/PWM_1.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/PWM_1.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/PWM_1.c **** *
 478:Generated_Source\PSoC5/PWM_1.c **** * Return:
 479:Generated_Source\PSoC5/PWM_1.c **** *  None
 480:Generated_Source\PSoC5/PWM_1.c **** *
 481:Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWM_1.c **** void PWM_1_WritePeriod(uint16 period) 
 483:Generated_Source\PSoC5/PWM_1.c **** {
 315              		.loc 1 483 0
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 15


 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 8
 318              		@ frame_needed = 1, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 320 0000 80B4     		push	{r7}
 321              		.cfi_def_cfa_offset 4
 322              		.cfi_offset 7, -4
 323 0002 83B0     		sub	sp, sp, #12
 324              		.cfi_def_cfa_offset 16
 325 0004 00AF     		add	r7, sp, #0
 326              		.cfi_def_cfa_register 7
 327 0006 0346     		mov	r3, r0
 328 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 484:Generated_Source\PSoC5/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/PWM_1.c ****     #else
 487:Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, period);
 329              		.loc 1 487 0
 330 000a 044A     		ldr	r2, .L22
 331 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 332 000e 1380     		strh	r3, [r2]	@ movhi
 488:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWM_1.c **** }
 333              		.loc 1 489 0
 334 0010 0C37     		adds	r7, r7, #12
 335              		.cfi_def_cfa_offset 4
 336 0012 BD46     		mov	sp, r7
 337              		.cfi_def_cfa_register 13
 338              		@ sp needed
 339 0014 5DF8047B 		ldr	r7, [sp], #4
 340              		.cfi_restore 7
 341              		.cfi_def_cfa_offset 0
 342 0018 7047     		bx	lr
 343              	.L23:
 344 001a 00BF     		.align	2
 345              	.L22:
 346 001c 98680040 		.word	1073768600
 347              		.cfi_endproc
 348              	.LFE6:
 349              		.size	PWM_1_WritePeriod, .-PWM_1_WritePeriod
 350              		.section	.text.PWM_1_WriteCompare1,"ax",%progbits
 351              		.align	2
 352              		.global	PWM_1_WriteCompare1
 353              		.thumb
 354              		.thumb_func
 355              		.type	PWM_1_WriteCompare1, %function
 356              	PWM_1_WriteCompare1:
 357              	.LFB7:
 490:Generated_Source\PSoC5/PWM_1.c **** 
 491:Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 492:Generated_Source\PSoC5/PWM_1.c **** 
 493:Generated_Source\PSoC5/PWM_1.c **** 
 494:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare
 496:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/PWM_1.c ****     *
 498:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 16


 499:Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/PWM_1.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWM_1.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWM_1.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWM_1.c ****     *
 505:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWM_1.c ****     *
 508:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 509:Generated_Source\PSoC5/PWM_1.c ****     *  None
 510:Generated_Source\PSoC5/PWM_1.c ****     *
 511:Generated_Source\PSoC5/PWM_1.c ****     * Side Effects:
 512:Generated_Source\PSoC5/PWM_1.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWM_1.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWM_1.c ****     *
 515:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC5/PWM_1.c ****                                        
 518:Generated_Source\PSoC5/PWM_1.c ****     {
 519:Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 520:Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/PWM_1.c ****         #else
 522:Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWM_1.c **** 
 525:Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_PWMMode == PWM_1__B_PWM__DITHER)
 526:Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 527:Generated_Source\PSoC5/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/PWM_1.c ****             #else
 529:Generated_Source\PSoC5/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 531:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_PWMMode == PWM_1__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWM_1.c ****     }
 533:Generated_Source\PSoC5/PWM_1.c **** 
 534:Generated_Source\PSoC5/PWM_1.c **** 
 535:Generated_Source\PSoC5/PWM_1.c **** #else
 536:Generated_Source\PSoC5/PWM_1.c **** 
 537:Generated_Source\PSoC5/PWM_1.c **** 
 538:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare1
 540:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWM_1.c ****     *
 542:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 543:Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/PWM_1.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/PWM_1.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/PWM_1.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/PWM_1.c ****     *
 548:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWM_1.c ****     *
 551:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 552:Generated_Source\PSoC5/PWM_1.c ****     *  None
 553:Generated_Source\PSoC5/PWM_1.c ****     *
 554:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare1(uint16 compare) \
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 17


 556:Generated_Source\PSoC5/PWM_1.c ****                                         
 557:Generated_Source\PSoC5/PWM_1.c ****     {
 358              		.loc 1 557 0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 8
 361              		@ frame_needed = 1, uses_anonymous_args = 0
 362              		@ link register save eliminated.
 363 0000 80B4     		push	{r7}
 364              		.cfi_def_cfa_offset 4
 365              		.cfi_offset 7, -4
 366 0002 83B0     		sub	sp, sp, #12
 367              		.cfi_def_cfa_offset 16
 368 0004 00AF     		add	r7, sp, #0
 369              		.cfi_def_cfa_register 7
 370 0006 0346     		mov	r3, r0
 371 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 558:Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 559:Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWM_1.c ****         #else
 561:Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, compare);
 372              		.loc 1 561 0
 373 000a 044A     		ldr	r2, .L25
 374 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 375 000e 1380     		strh	r3, [r2]	@ movhi
 562:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWM_1.c ****     }
 376              		.loc 1 563 0
 377 0010 0C37     		adds	r7, r7, #12
 378              		.cfi_def_cfa_offset 4
 379 0012 BD46     		mov	sp, r7
 380              		.cfi_def_cfa_register 13
 381              		@ sp needed
 382 0014 5DF8047B 		ldr	r7, [sp], #4
 383              		.cfi_restore 7
 384              		.cfi_def_cfa_offset 0
 385 0018 7047     		bx	lr
 386              	.L26:
 387 001a 00BF     		.align	2
 388              	.L25:
 389 001c 58680040 		.word	1073768536
 390              		.cfi_endproc
 391              	.LFE7:
 392              		.size	PWM_1_WriteCompare1, .-PWM_1_WriteCompare1
 393              		.section	.text.PWM_1_WriteCompare2,"ax",%progbits
 394              		.align	2
 395              		.global	PWM_1_WriteCompare2
 396              		.thumb
 397              		.thumb_func
 398              		.type	PWM_1_WriteCompare2, %function
 399              	PWM_1_WriteCompare2:
 400              	.LFB8:
 564:Generated_Source\PSoC5/PWM_1.c **** 
 565:Generated_Source\PSoC5/PWM_1.c **** 
 566:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare2
 568:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/PWM_1.c ****     *
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 18


 570:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 571:Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWM_1.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWM_1.c ****     *  mode.
 576:Generated_Source\PSoC5/PWM_1.c ****     *
 577:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWM_1.c ****     *
 580:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 581:Generated_Source\PSoC5/PWM_1.c ****     *  None
 582:Generated_Source\PSoC5/PWM_1.c ****     *
 583:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC5/PWM_1.c ****                                         
 586:Generated_Source\PSoC5/PWM_1.c ****     {
 401              		.loc 1 586 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 8
 404              		@ frame_needed = 1, uses_anonymous_args = 0
 405              		@ link register save eliminated.
 406 0000 80B4     		push	{r7}
 407              		.cfi_def_cfa_offset 4
 408              		.cfi_offset 7, -4
 409 0002 83B0     		sub	sp, sp, #12
 410              		.cfi_def_cfa_offset 16
 411 0004 00AF     		add	r7, sp, #0
 412              		.cfi_def_cfa_register 7
 413 0006 0346     		mov	r3, r0
 414 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 587:Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWM_1.c ****         #else
 590:Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 415              		.loc 1 590 0
 416 000a 044A     		ldr	r2, .L28
 417 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 418 000e 1380     		strh	r3, [r2]	@ movhi
 591:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 592:Generated_Source\PSoC5/PWM_1.c ****     }
 419              		.loc 1 592 0
 420 0010 0C37     		adds	r7, r7, #12
 421              		.cfi_def_cfa_offset 4
 422 0012 BD46     		mov	sp, r7
 423              		.cfi_def_cfa_register 13
 424              		@ sp needed
 425 0014 5DF8047B 		ldr	r7, [sp], #4
 426              		.cfi_restore 7
 427              		.cfi_def_cfa_offset 0
 428 0018 7047     		bx	lr
 429              	.L29:
 430 001a 00BF     		.align	2
 431              	.L28:
 432 001c 78680040 		.word	1073768568
 433              		.cfi_endproc
 434              	.LFE8:
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 19


 435              		.size	PWM_1_WriteCompare2, .-PWM_1_WriteCompare2
 436              		.section	.text.PWM_1_ReadControlRegister,"ax",%progbits
 437              		.align	2
 438              		.global	PWM_1_ReadControlRegister
 439              		.thumb
 440              		.thumb_func
 441              		.type	PWM_1_ReadControlRegister, %function
 442              	PWM_1_ReadControlRegister:
 443              	.LFB9:
 593:Generated_Source\PSoC5/PWM_1.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWM_1.c **** 
 595:Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_DeadBandUsed)
 596:Generated_Source\PSoC5/PWM_1.c **** 
 597:Generated_Source\PSoC5/PWM_1.c **** 
 598:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteDeadTime
 600:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/PWM_1.c ****     *
 602:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 603:Generated_Source\PSoC5/PWM_1.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWM_1.c ****     *
 605:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWM_1.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWM_1.c ****     *
 608:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 609:Generated_Source\PSoC5/PWM_1.c ****     *  None
 610:Generated_Source\PSoC5/PWM_1.c ****     *
 611:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWM_1.c ****     {
 614:Generated_Source\PSoC5/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 616:Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG8(PWM_1_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWM_1.c ****         #else
 618:Generated_Source\PSoC5/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/PWM_1.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_DEADBAND_COUNT &= ((uint8)(~PWM_1_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/PWM_1.c **** 
 622:Generated_Source\PSoC5/PWM_1.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_1_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC5/PWM_1.c ****                                                     PWM_1_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/PWM_1.c ****             #else
 627:Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= deadtime & PWM_1_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/PWM_1.c **** 
 630:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWM_1.c ****     }
 632:Generated_Source\PSoC5/PWM_1.c **** 
 633:Generated_Source\PSoC5/PWM_1.c **** 
 634:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadDeadTime
 636:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/PWM_1.c ****     *
 638:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 639:Generated_Source\PSoC5/PWM_1.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/PWM_1.c ****     *
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 20


 641:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWM_1.c ****     *  None
 643:Generated_Source\PSoC5/PWM_1.c ****     *
 644:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 645:Generated_Source\PSoC5/PWM_1.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWM_1.c ****     *
 647:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/PWM_1.c ****     {
 650:Generated_Source\PSoC5/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 652:Generated_Source\PSoC5/PWM_1.c ****             return (CY_GET_REG8(PWM_1_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWM_1.c ****         #else
 654:Generated_Source\PSoC5/PWM_1.c **** 
 655:Generated_Source\PSoC5/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWM_1.c ****                 return ((uint8)(((uint8)(PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC5/PWM_1.c ****                                                                            PWM_1_DEADBAND_COUNT_SHI
 659:Generated_Source\PSoC5/PWM_1.c ****             #else
 660:Generated_Source\PSoC5/PWM_1.c ****                 return (PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWM_1.c ****     }
 664:Generated_Source\PSoC5/PWM_1.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/PWM_1.c **** 
 666:Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWM_1.c **** 
 668:Generated_Source\PSoC5/PWM_1.c **** 
 669:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_SetInterruptMode
 671:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/PWM_1.c ****     *
 673:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 674:Generated_Source\PSoC5/PWM_1.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/PWM_1.c ****     *  source status register.
 676:Generated_Source\PSoC5/PWM_1.c ****     *
 677:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWM_1.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/PWM_1.c ****     *
 680:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 681:Generated_Source\PSoC5/PWM_1.c ****     *  None
 682:Generated_Source\PSoC5/PWM_1.c ****     *
 683:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/PWM_1.c ****     {
 686:Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_STATUS_MASK_PTR, interruptMode);
 687:Generated_Source\PSoC5/PWM_1.c ****     }
 688:Generated_Source\PSoC5/PWM_1.c **** 
 689:Generated_Source\PSoC5/PWM_1.c **** 
 690:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadStatusRegister
 692:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWM_1.c ****     *
 694:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 695:Generated_Source\PSoC5/PWM_1.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/PWM_1.c ****     *
 697:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 21


 698:Generated_Source\PSoC5/PWM_1.c ****     *  None
 699:Generated_Source\PSoC5/PWM_1.c ****     *
 700:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 701:Generated_Source\PSoC5/PWM_1.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWM_1.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/PWM_1.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/PWM_1.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWM_1.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/PWM_1.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWM_1.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/PWM_1.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWM_1.c ****     *
 710:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWM_1.c ****     {
 713:Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_STATUS_PTR));
 714:Generated_Source\PSoC5/PWM_1.c ****     }
 715:Generated_Source\PSoC5/PWM_1.c **** 
 716:Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 717:Generated_Source\PSoC5/PWM_1.c **** 
 718:Generated_Source\PSoC5/PWM_1.c **** 
 719:Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseControl)
 720:Generated_Source\PSoC5/PWM_1.c **** 
 721:Generated_Source\PSoC5/PWM_1.c **** 
 722:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadControlRegister
 724:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWM_1.c ****     *
 726:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 727:Generated_Source\PSoC5/PWM_1.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWM_1.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWM_1.c ****     *
 730:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWM_1.c ****     *  None
 732:Generated_Source\PSoC5/PWM_1.c ****     *
 733:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 734:Generated_Source\PSoC5/PWM_1.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/PWM_1.c ****     *
 736:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWM_1.c ****     {
 444              		.loc 1 738 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 8
 447              		@ frame_needed = 1, uses_anonymous_args = 0
 448              		@ link register save eliminated.
 449 0000 80B4     		push	{r7}
 450              		.cfi_def_cfa_offset 4
 451              		.cfi_offset 7, -4
 452 0002 83B0     		sub	sp, sp, #12
 453              		.cfi_def_cfa_offset 16
 454 0004 00AF     		add	r7, sp, #0
 455              		.cfi_def_cfa_register 7
 739:Generated_Source\PSoC5/PWM_1.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWM_1.c **** 
 741:Generated_Source\PSoC5/PWM_1.c ****         result = CY_GET_REG8(PWM_1_CONTROL_PTR);
 456              		.loc 1 741 0
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 22


 457 0006 054B     		ldr	r3, .L32
 458 0008 1B78     		ldrb	r3, [r3]
 459 000a FB71     		strb	r3, [r7, #7]
 742:Generated_Source\PSoC5/PWM_1.c ****         return (result);
 460              		.loc 1 742 0
 461 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 743:Generated_Source\PSoC5/PWM_1.c ****     }
 462              		.loc 1 743 0
 463 000e 1846     		mov	r0, r3
 464 0010 0C37     		adds	r7, r7, #12
 465              		.cfi_def_cfa_offset 4
 466 0012 BD46     		mov	sp, r7
 467              		.cfi_def_cfa_register 13
 468              		@ sp needed
 469 0014 5DF8047B 		ldr	r7, [sp], #4
 470              		.cfi_restore 7
 471              		.cfi_def_cfa_offset 0
 472 0018 7047     		bx	lr
 473              	.L33:
 474 001a 00BF     		.align	2
 475              	.L32:
 476 001c 7D640040 		.word	1073767549
 477              		.cfi_endproc
 478              	.LFE9:
 479              		.size	PWM_1_ReadControlRegister, .-PWM_1_ReadControlRegister
 480              		.section	.text.PWM_1_WriteControlRegister,"ax",%progbits
 481              		.align	2
 482              		.global	PWM_1_WriteControlRegister
 483              		.thumb
 484              		.thumb_func
 485              		.type	PWM_1_WriteControlRegister, %function
 486              	PWM_1_WriteControlRegister:
 487              	.LFB10:
 744:Generated_Source\PSoC5/PWM_1.c **** 
 745:Generated_Source\PSoC5/PWM_1.c **** 
 746:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteControlRegister
 748:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWM_1.c ****     *
 750:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 751:Generated_Source\PSoC5/PWM_1.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWM_1.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWM_1.c ****     *
 754:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWM_1.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWM_1.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/PWM_1.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWM_1.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWM_1.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWM_1.c ****     *
 761:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 762:Generated_Source\PSoC5/PWM_1.c ****     *  None
 763:Generated_Source\PSoC5/PWM_1.c ****     *
 764:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/PWM_1.c ****     {
 488              		.loc 1 766 0
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 23


 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 8
 491              		@ frame_needed = 1, uses_anonymous_args = 0
 492              		@ link register save eliminated.
 493 0000 80B4     		push	{r7}
 494              		.cfi_def_cfa_offset 4
 495              		.cfi_offset 7, -4
 496 0002 83B0     		sub	sp, sp, #12
 497              		.cfi_def_cfa_offset 16
 498 0004 00AF     		add	r7, sp, #0
 499              		.cfi_def_cfa_register 7
 500 0006 0346     		mov	r3, r0
 501 0008 FB71     		strb	r3, [r7, #7]
 767:Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_CONTROL_PTR, control);
 502              		.loc 1 767 0
 503 000a 044A     		ldr	r2, .L35
 504 000c FB79     		ldrb	r3, [r7, #7]
 505 000e 1370     		strb	r3, [r2]
 768:Generated_Source\PSoC5/PWM_1.c ****     }
 506              		.loc 1 768 0
 507 0010 0C37     		adds	r7, r7, #12
 508              		.cfi_def_cfa_offset 4
 509 0012 BD46     		mov	sp, r7
 510              		.cfi_def_cfa_register 13
 511              		@ sp needed
 512 0014 5DF8047B 		ldr	r7, [sp], #4
 513              		.cfi_restore 7
 514              		.cfi_def_cfa_offset 0
 515 0018 7047     		bx	lr
 516              	.L36:
 517 001a 00BF     		.align	2
 518              	.L35:
 519 001c 7D640040 		.word	1073767549
 520              		.cfi_endproc
 521              	.LFE10:
 522              		.size	PWM_1_WriteControlRegister, .-PWM_1_WriteControlRegister
 523              		.section	.text.PWM_1_ReadCapture,"ax",%progbits
 524              		.align	2
 525              		.global	PWM_1_ReadCapture
 526              		.thumb
 527              		.thumb_func
 528              		.type	PWM_1_ReadCapture, %function
 529              	PWM_1_ReadCapture:
 530              	.LFB11:
 769:Generated_Source\PSoC5/PWM_1.c **** 
 770:Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseControl) */
 771:Generated_Source\PSoC5/PWM_1.c **** 
 772:Generated_Source\PSoC5/PWM_1.c **** 
 773:Generated_Source\PSoC5/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWM_1.c **** 
 775:Generated_Source\PSoC5/PWM_1.c **** 
 776:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCapture
 778:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/PWM_1.c ****     *
 780:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 781:Generated_Source\PSoC5/PWM_1.c ****     *  Reads the capture value from the capture FIFO.
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 24


 782:Generated_Source\PSoC5/PWM_1.c ****     *
 783:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWM_1.c ****     *  None
 785:Generated_Source\PSoC5/PWM_1.c ****     *
 786:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 787:Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWM_1.c ****     *
 789:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCapture(void) 
 791:Generated_Source\PSoC5/PWM_1.c ****     {
 531              		.loc 1 791 0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 0
 534              		@ frame_needed = 1, uses_anonymous_args = 0
 535              		@ link register save eliminated.
 536 0000 80B4     		push	{r7}
 537              		.cfi_def_cfa_offset 4
 538              		.cfi_offset 7, -4
 539 0002 00AF     		add	r7, sp, #0
 540              		.cfi_def_cfa_register 7
 792:Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_CAPTURE_LSB_PTR));
 541              		.loc 1 792 0
 542 0004 034B     		ldr	r3, .L39
 543 0006 1B88     		ldrh	r3, [r3]	@ movhi
 544 0008 9BB2     		uxth	r3, r3
 793:Generated_Source\PSoC5/PWM_1.c ****     }
 545              		.loc 1 793 0
 546 000a 1846     		mov	r0, r3
 547 000c BD46     		mov	sp, r7
 548              		.cfi_def_cfa_register 13
 549              		@ sp needed
 550 000e 5DF8047B 		ldr	r7, [sp], #4
 551              		.cfi_restore 7
 552              		.cfi_def_cfa_offset 0
 553 0012 7047     		bx	lr
 554              	.L40:
 555              		.align	2
 556              	.L39:
 557 0014 B8680040 		.word	1073768632
 558              		.cfi_endproc
 559              	.LFE11:
 560              		.size	PWM_1_ReadCapture, .-PWM_1_ReadCapture
 561              		.section	.text.PWM_1_ReadCompare1,"ax",%progbits
 562              		.align	2
 563              		.global	PWM_1_ReadCompare1
 564              		.thumb
 565              		.thumb_func
 566              		.type	PWM_1_ReadCompare1, %function
 567              	PWM_1_ReadCompare1:
 568              	.LFB12:
 794:Generated_Source\PSoC5/PWM_1.c **** 
 795:Generated_Source\PSoC5/PWM_1.c **** #endif /* (!PWM_1_UsingFixedFunction) */
 796:Generated_Source\PSoC5/PWM_1.c **** 
 797:Generated_Source\PSoC5/PWM_1.c **** 
 798:Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWM_1.c **** 
 800:Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 25


 801:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare
 803:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWM_1.c ****     *
 805:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 806:Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWM_1.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/PWM_1.c ****     *
 809:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 810:Generated_Source\PSoC5/PWM_1.c ****     *  None
 811:Generated_Source\PSoC5/PWM_1.c ****     *
 812:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 813:Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWM_1.c ****     *
 815:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWM_1.c ****     {
 818:Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWM_1.c ****             return ((uint16)CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/PWM_1.c ****         #else
 821:Generated_Source\PSoC5/PWM_1.c ****             return (CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWM_1.c ****     }
 824:Generated_Source\PSoC5/PWM_1.c **** 
 825:Generated_Source\PSoC5/PWM_1.c **** #else
 826:Generated_Source\PSoC5/PWM_1.c **** 
 827:Generated_Source\PSoC5/PWM_1.c **** 
 828:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare1
 830:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWM_1.c ****     *
 832:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 833:Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWM_1.c ****     *
 835:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWM_1.c ****     *  None
 837:Generated_Source\PSoC5/PWM_1.c ****     *
 838:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 839:Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/PWM_1.c ****     *
 841:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWM_1.c ****     {
 569              		.loc 1 843 0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 1, uses_anonymous_args = 0
 573              		@ link register save eliminated.
 574 0000 80B4     		push	{r7}
 575              		.cfi_def_cfa_offset 4
 576              		.cfi_offset 7, -4
 577 0002 00AF     		add	r7, sp, #0
 578              		.cfi_def_cfa_register 7
 844:Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 579              		.loc 1 844 0
 580 0004 034B     		ldr	r3, .L43
 581 0006 1B88     		ldrh	r3, [r3]	@ movhi
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 26


 582 0008 9BB2     		uxth	r3, r3
 845:Generated_Source\PSoC5/PWM_1.c ****     }
 583              		.loc 1 845 0
 584 000a 1846     		mov	r0, r3
 585 000c BD46     		mov	sp, r7
 586              		.cfi_def_cfa_register 13
 587              		@ sp needed
 588 000e 5DF8047B 		ldr	r7, [sp], #4
 589              		.cfi_restore 7
 590              		.cfi_def_cfa_offset 0
 591 0012 7047     		bx	lr
 592              	.L44:
 593              		.align	2
 594              	.L43:
 595 0014 58680040 		.word	1073768536
 596              		.cfi_endproc
 597              	.LFE12:
 598              		.size	PWM_1_ReadCompare1, .-PWM_1_ReadCompare1
 599              		.section	.text.PWM_1_ReadCompare2,"ax",%progbits
 600              		.align	2
 601              		.global	PWM_1_ReadCompare2
 602              		.thumb
 603              		.thumb_func
 604              		.type	PWM_1_ReadCompare2, %function
 605              	PWM_1_ReadCompare2:
 606              	.LFB13:
 846:Generated_Source\PSoC5/PWM_1.c **** 
 847:Generated_Source\PSoC5/PWM_1.c **** 
 848:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare2
 850:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWM_1.c ****     *
 852:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 853:Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWM_1.c ****     *
 855:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWM_1.c ****     *  None
 857:Generated_Source\PSoC5/PWM_1.c ****     *
 858:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 859:Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWM_1.c ****     *
 861:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCompare2(void) 
 863:Generated_Source\PSoC5/PWM_1.c ****     {
 607              		.loc 1 863 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 1, uses_anonymous_args = 0
 611              		@ link register save eliminated.
 612 0000 80B4     		push	{r7}
 613              		.cfi_def_cfa_offset 4
 614              		.cfi_offset 7, -4
 615 0002 00AF     		add	r7, sp, #0
 616              		.cfi_def_cfa_register 7
 864:Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_COMPARE2_LSB_PTR));
 617              		.loc 1 864 0
 618 0004 034B     		ldr	r3, .L47
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 27


 619 0006 1B88     		ldrh	r3, [r3]	@ movhi
 620 0008 9BB2     		uxth	r3, r3
 865:Generated_Source\PSoC5/PWM_1.c ****     }
 621              		.loc 1 865 0
 622 000a 1846     		mov	r0, r3
 623 000c BD46     		mov	sp, r7
 624              		.cfi_def_cfa_register 13
 625              		@ sp needed
 626 000e 5DF8047B 		ldr	r7, [sp], #4
 627              		.cfi_restore 7
 628              		.cfi_def_cfa_offset 0
 629 0012 7047     		bx	lr
 630              	.L48:
 631              		.align	2
 632              	.L47:
 633 0014 78680040 		.word	1073768568
 634              		.cfi_endproc
 635              	.LFE13:
 636              		.size	PWM_1_ReadCompare2, .-PWM_1_ReadCompare2
 637              		.section	.text.PWM_1_ReadPeriod,"ax",%progbits
 638              		.align	2
 639              		.global	PWM_1_ReadPeriod
 640              		.thumb
 641              		.thumb_func
 642              		.type	PWM_1_ReadPeriod, %function
 643              	PWM_1_ReadPeriod:
 644              	.LFB14:
 866:Generated_Source\PSoC5/PWM_1.c **** 
 867:Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseOneCompareMode) */
 868:Generated_Source\PSoC5/PWM_1.c **** 
 869:Generated_Source\PSoC5/PWM_1.c **** 
 870:Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_ReadPeriod
 872:Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 873:Generated_Source\PSoC5/PWM_1.c **** *
 874:Generated_Source\PSoC5/PWM_1.c **** * Summary:
 875:Generated_Source\PSoC5/PWM_1.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/PWM_1.c **** *
 877:Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 878:Generated_Source\PSoC5/PWM_1.c **** *  None
 879:Generated_Source\PSoC5/PWM_1.c **** *
 880:Generated_Source\PSoC5/PWM_1.c **** * Return:
 881:Generated_Source\PSoC5/PWM_1.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWM_1.c **** *
 883:Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/PWM_1.c **** uint16 PWM_1_ReadPeriod(void) 
 885:Generated_Source\PSoC5/PWM_1.c **** {
 645              		.loc 1 885 0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 0
 648              		@ frame_needed = 1, uses_anonymous_args = 0
 649              		@ link register save eliminated.
 650 0000 80B4     		push	{r7}
 651              		.cfi_def_cfa_offset 4
 652              		.cfi_offset 7, -4
 653 0002 00AF     		add	r7, sp, #0
 654              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 28


 886:Generated_Source\PSoC5/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWM_1.c ****         return ((uint16)CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/PWM_1.c ****     #else
 889:Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 655              		.loc 1 889 0
 656 0004 034B     		ldr	r3, .L51
 657 0006 1B88     		ldrh	r3, [r3]	@ movhi
 658 0008 9BB2     		uxth	r3, r3
 890:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWM_1.c **** }
 659              		.loc 1 891 0
 660 000a 1846     		mov	r0, r3
 661 000c BD46     		mov	sp, r7
 662              		.cfi_def_cfa_register 13
 663              		@ sp needed
 664 000e 5DF8047B 		ldr	r7, [sp], #4
 665              		.cfi_restore 7
 666              		.cfi_def_cfa_offset 0
 667 0012 7047     		bx	lr
 668              	.L52:
 669              		.align	2
 670              	.L51:
 671 0014 98680040 		.word	1073768600
 672              		.cfi_endproc
 673              	.LFE14:
 674              		.size	PWM_1_ReadPeriod, .-PWM_1_ReadPeriod
 675              		.text
 676              	.Letext0:
 677              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 678              		.section	.debug_info,"",%progbits
 679              	.Ldebug_info0:
 680 0000 7A020000 		.4byte	0x27a
 681 0004 0400     		.2byte	0x4
 682 0006 00000000 		.4byte	.Ldebug_abbrev0
 683 000a 04       		.byte	0x4
 684 000b 01       		.uleb128 0x1
 685 000c E0000000 		.4byte	.LASF37
 686 0010 01       		.byte	0x1
 687 0011 D5010000 		.4byte	.LASF38
 688 0015 5E020000 		.4byte	.LASF39
 689 0019 00000000 		.4byte	.Ldebug_ranges0+0
 690 001d 00000000 		.4byte	0
 691 0021 00000000 		.4byte	.Ldebug_line0
 692 0025 02       		.uleb128 0x2
 693 0026 01       		.byte	0x1
 694 0027 06       		.byte	0x6
 695 0028 E8020000 		.4byte	.LASF0
 696 002c 02       		.uleb128 0x2
 697 002d 01       		.byte	0x1
 698 002e 08       		.byte	0x8
 699 002f 9C000000 		.4byte	.LASF1
 700 0033 02       		.uleb128 0x2
 701 0034 02       		.byte	0x2
 702 0035 05       		.byte	0x5
 703 0036 83010000 		.4byte	.LASF2
 704 003a 02       		.uleb128 0x2
 705 003b 02       		.byte	0x2
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 29


 706 003c 07       		.byte	0x7
 707 003d 53000000 		.4byte	.LASF3
 708 0041 02       		.uleb128 0x2
 709 0042 04       		.byte	0x4
 710 0043 05       		.byte	0x5
 711 0044 DA020000 		.4byte	.LASF4
 712 0048 02       		.uleb128 0x2
 713 0049 04       		.byte	0x4
 714 004a 07       		.byte	0x7
 715 004b C0000000 		.4byte	.LASF5
 716 004f 02       		.uleb128 0x2
 717 0050 08       		.byte	0x8
 718 0051 05       		.byte	0x5
 719 0052 09020000 		.4byte	.LASF6
 720 0056 02       		.uleb128 0x2
 721 0057 08       		.byte	0x8
 722 0058 07       		.byte	0x7
 723 0059 BE010000 		.4byte	.LASF7
 724 005d 03       		.uleb128 0x3
 725 005e 04       		.byte	0x4
 726 005f 05       		.byte	0x5
 727 0060 696E7400 		.ascii	"int\000"
 728 0064 02       		.uleb128 0x2
 729 0065 04       		.byte	0x4
 730 0066 07       		.byte	0x7
 731 0067 B1010000 		.4byte	.LASF8
 732 006b 04       		.uleb128 0x4
 733 006c D2000000 		.4byte	.LASF9
 734 0070 02       		.byte	0x2
 735 0071 C2       		.byte	0xc2
 736 0072 2C000000 		.4byte	0x2c
 737 0076 04       		.uleb128 0x4
 738 0077 9F010000 		.4byte	.LASF10
 739 007b 02       		.byte	0x2
 740 007c C3       		.byte	0xc3
 741 007d 3A000000 		.4byte	0x3a
 742 0081 02       		.uleb128 0x2
 743 0082 04       		.byte	0x4
 744 0083 04       		.byte	0x4
 745 0084 8E000000 		.4byte	.LASF11
 746 0088 02       		.uleb128 0x2
 747 0089 08       		.byte	0x8
 748 008a 04       		.byte	0x4
 749 008b 6E010000 		.4byte	.LASF12
 750 008f 02       		.uleb128 0x2
 751 0090 01       		.byte	0x1
 752 0091 08       		.byte	0x8
 753 0092 E3020000 		.4byte	.LASF13
 754 0096 05       		.uleb128 0x5
 755 0097 AA000000 		.4byte	.LASF14
 756 009b 02       		.byte	0x2
 757 009c 6C01     		.2byte	0x16c
 758 009e A2000000 		.4byte	0xa2
 759 00a2 06       		.uleb128 0x6
 760 00a3 6B000000 		.4byte	0x6b
 761 00a7 05       		.uleb128 0x5
 762 00a8 00000000 		.4byte	.LASF15
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 30


 763 00ac 02       		.byte	0x2
 764 00ad 6D01     		.2byte	0x16d
 765 00af B3000000 		.4byte	0xb3
 766 00b3 06       		.uleb128 0x6
 767 00b4 76000000 		.4byte	0x76
 768 00b8 02       		.uleb128 0x2
 769 00b9 04       		.byte	0x4
 770 00ba 07       		.byte	0x7
 771 00bb 00020000 		.4byte	.LASF16
 772 00bf 07       		.uleb128 0x7
 773 00c0 FC020000 		.4byte	.LASF17
 774 00c4 01       		.byte	0x1
 775 00c5 37       		.byte	0x37
 776 00c6 00000000 		.4byte	.LFB0
 777 00ca 20000000 		.4byte	.LFE0-.LFB0
 778 00ce 01       		.uleb128 0x1
 779 00cf 9C       		.byte	0x9c
 780 00d0 08       		.uleb128 0x8
 781 00d1 A6010000 		.4byte	.LASF20
 782 00d5 01       		.byte	0x1
 783 00d6 54       		.byte	0x54
 784 00d7 00000000 		.4byte	.LFB1
 785 00db 68000000 		.4byte	.LFE1-.LFB1
 786 00df 01       		.uleb128 0x1
 787 00e0 9C       		.byte	0x9c
 788 00e1 F4000000 		.4byte	0xf4
 789 00e5 09       		.uleb128 0x9
 790 00e6 FB010000 		.4byte	.LASF28
 791 00ea 01       		.byte	0x1
 792 00eb 57       		.byte	0x57
 793 00ec 6B000000 		.4byte	0x6b
 794 00f0 02       		.uleb128 0x2
 795 00f1 91       		.byte	0x91
 796 00f2 77       		.sleb128 -9
 797 00f3 00       		.byte	0
 798 00f4 0A       		.uleb128 0xa
 799 00f5 06000000 		.4byte	.LASF18
 800 00f9 01       		.byte	0x1
 801 00fa C7       		.byte	0xc7
 802 00fb 00000000 		.4byte	.LFB2
 803 00ff 20000000 		.4byte	.LFE2-.LFB2
 804 0103 01       		.uleb128 0x1
 805 0104 9C       		.byte	0x9c
 806 0105 0A       		.uleb128 0xa
 807 0106 CF020000 		.4byte	.LASF19
 808 010a 01       		.byte	0x1
 809 010b E9       		.byte	0xe9
 810 010c 00000000 		.4byte	.LFB3
 811 0110 20000000 		.4byte	.LFE3-.LFB3
 812 0114 01       		.uleb128 0x1
 813 0115 9C       		.byte	0x9c
 814 0116 0B       		.uleb128 0xb
 815 0117 13000000 		.4byte	.LASF21
 816 011b 01       		.byte	0x1
 817 011c 9301     		.2byte	0x193
 818 011e 00000000 		.4byte	.LFB4
 819 0122 20000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 31


 820 0126 01       		.uleb128 0x1
 821 0127 9C       		.byte	0x9c
 822 0128 3C010000 		.4byte	0x13c
 823 012c 0C       		.uleb128 0xc
 824 012d 94000000 		.4byte	.LASF23
 825 0131 01       		.byte	0x1
 826 0132 9301     		.2byte	0x193
 827 0134 76000000 		.4byte	0x76
 828 0138 02       		.uleb128 0x2
 829 0139 91       		.byte	0x91
 830 013a 76       		.sleb128 -10
 831 013b 00       		.byte	0
 832 013c 0D       		.uleb128 0xd
 833 013d BD020000 		.4byte	.LASF32
 834 0141 01       		.byte	0x1
 835 0142 A901     		.2byte	0x1a9
 836 0144 76000000 		.4byte	0x76
 837 0148 00000000 		.4byte	.LFB5
 838 014c 20000000 		.4byte	.LFE5-.LFB5
 839 0150 01       		.uleb128 0x1
 840 0151 9C       		.byte	0x9c
 841 0152 0B       		.uleb128 0xb
 842 0153 4C020000 		.4byte	.LASF22
 843 0157 01       		.byte	0x1
 844 0158 E201     		.2byte	0x1e2
 845 015a 00000000 		.4byte	.LFB6
 846 015e 20000000 		.4byte	.LFE6-.LFB6
 847 0162 01       		.uleb128 0x1
 848 0163 9C       		.byte	0x9c
 849 0164 78010000 		.4byte	0x178
 850 0168 0C       		.uleb128 0xc
 851 0169 26000000 		.4byte	.LASF24
 852 016d 01       		.byte	0x1
 853 016e E201     		.2byte	0x1e2
 854 0170 76000000 		.4byte	0x76
 855 0174 02       		.uleb128 0x2
 856 0175 91       		.byte	0x91
 857 0176 76       		.sleb128 -10
 858 0177 00       		.byte	0
 859 0178 0B       		.uleb128 0xb
 860 0179 66000000 		.4byte	.LASF25
 861 017d 01       		.byte	0x1
 862 017e 2B02     		.2byte	0x22b
 863 0180 00000000 		.4byte	.LFB7
 864 0184 20000000 		.4byte	.LFE7-.LFB7
 865 0188 01       		.uleb128 0x1
 866 0189 9C       		.byte	0x9c
 867 018a 9E010000 		.4byte	0x19e
 868 018e 0C       		.uleb128 0xc
 869 018f F4020000 		.4byte	.LASF26
 870 0193 01       		.byte	0x1
 871 0194 2B02     		.2byte	0x22b
 872 0196 76000000 		.4byte	0x76
 873 019a 02       		.uleb128 0x2
 874 019b 91       		.byte	0x91
 875 019c 76       		.sleb128 -10
 876 019d 00       		.byte	0
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 32


 877 019e 0B       		.uleb128 0xb
 878 019f 7A000000 		.4byte	.LASF27
 879 01a3 01       		.byte	0x1
 880 01a4 4802     		.2byte	0x248
 881 01a6 00000000 		.4byte	.LFB8
 882 01aa 20000000 		.4byte	.LFE8-.LFB8
 883 01ae 01       		.uleb128 0x1
 884 01af 9C       		.byte	0x9c
 885 01b0 C4010000 		.4byte	0x1c4
 886 01b4 0C       		.uleb128 0xc
 887 01b5 F4020000 		.4byte	.LASF26
 888 01b9 01       		.byte	0x1
 889 01ba 4802     		.2byte	0x248
 890 01bc 76000000 		.4byte	0x76
 891 01c0 02       		.uleb128 0x2
 892 01c1 91       		.byte	0x91
 893 01c2 76       		.sleb128 -10
 894 01c3 00       		.byte	0
 895 01c4 0E       		.uleb128 0xe
 896 01c5 17020000 		.4byte	.LASF40
 897 01c9 01       		.byte	0x1
 898 01ca E102     		.2byte	0x2e1
 899 01cc 6B000000 		.4byte	0x6b
 900 01d0 00000000 		.4byte	.LFB9
 901 01d4 20000000 		.4byte	.LFE9-.LFB9
 902 01d8 01       		.uleb128 0x1
 903 01d9 9C       		.byte	0x9c
 904 01da EE010000 		.4byte	0x1ee
 905 01de 0F       		.uleb128 0xf
 906 01df F4010000 		.4byte	.LASF29
 907 01e3 01       		.byte	0x1
 908 01e4 E302     		.2byte	0x2e3
 909 01e6 6B000000 		.4byte	0x6b
 910 01ea 02       		.uleb128 0x2
 911 01eb 91       		.byte	0x91
 912 01ec 77       		.sleb128 -9
 913 01ed 00       		.byte	0
 914 01ee 0B       		.uleb128 0xb
 915 01ef 31020000 		.4byte	.LASF30
 916 01f3 01       		.byte	0x1
 917 01f4 FD02     		.2byte	0x2fd
 918 01f6 00000000 		.4byte	.LFB10
 919 01fa 20000000 		.4byte	.LFE10-.LFB10
 920 01fe 01       		.uleb128 0x1
 921 01ff 9C       		.byte	0x9c
 922 0200 14020000 		.4byte	0x214
 923 0204 0C       		.uleb128 0xc
 924 0205 D8000000 		.4byte	.LASF31
 925 0209 01       		.byte	0x1
 926 020a FD02     		.2byte	0x2fd
 927 020c 6B000000 		.4byte	0x6b
 928 0210 02       		.uleb128 0x2
 929 0211 91       		.byte	0x91
 930 0212 77       		.sleb128 -9
 931 0213 00       		.byte	0
 932 0214 0D       		.uleb128 0xd
 933 0215 8D010000 		.4byte	.LASF33
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 33


 934 0219 01       		.byte	0x1
 935 021a 1603     		.2byte	0x316
 936 021c 76000000 		.4byte	0x76
 937 0220 00000000 		.4byte	.LFB11
 938 0224 18000000 		.4byte	.LFE11-.LFB11
 939 0228 01       		.uleb128 0x1
 940 0229 9C       		.byte	0x9c
 941 022a 0D       		.uleb128 0xd
 942 022b 2D000000 		.4byte	.LASF34
 943 022f 01       		.byte	0x1
 944 0230 4A03     		.2byte	0x34a
 945 0232 76000000 		.4byte	0x76
 946 0236 00000000 		.4byte	.LFB12
 947 023a 18000000 		.4byte	.LFE12-.LFB12
 948 023e 01       		.uleb128 0x1
 949 023f 9C       		.byte	0x9c
 950 0240 0D       		.uleb128 0xd
 951 0241 40000000 		.4byte	.LASF35
 952 0245 01       		.byte	0x1
 953 0246 5E03     		.2byte	0x35e
 954 0248 76000000 		.4byte	0x76
 955 024c 00000000 		.4byte	.LFB13
 956 0250 18000000 		.4byte	.LFE13-.LFB13
 957 0254 01       		.uleb128 0x1
 958 0255 9C       		.byte	0x9c
 959 0256 0D       		.uleb128 0xd
 960 0257 AF000000 		.4byte	.LASF36
 961 025b 01       		.byte	0x1
 962 025c 7403     		.2byte	0x374
 963 025e 76000000 		.4byte	0x76
 964 0262 00000000 		.4byte	.LFB14
 965 0266 18000000 		.4byte	.LFE14-.LFB14
 966 026a 01       		.uleb128 0x1
 967 026b 9C       		.byte	0x9c
 968 026c 10       		.uleb128 0x10
 969 026d 75010000 		.4byte	.LASF41
 970 0271 01       		.byte	0x1
 971 0272 20       		.byte	0x20
 972 0273 6B000000 		.4byte	0x6b
 973 0277 05       		.uleb128 0x5
 974 0278 03       		.byte	0x3
 975 0279 00000000 		.4byte	PWM_1_initVar
 976 027d 00       		.byte	0
 977              		.section	.debug_abbrev,"",%progbits
 978              	.Ldebug_abbrev0:
 979 0000 01       		.uleb128 0x1
 980 0001 11       		.uleb128 0x11
 981 0002 01       		.byte	0x1
 982 0003 25       		.uleb128 0x25
 983 0004 0E       		.uleb128 0xe
 984 0005 13       		.uleb128 0x13
 985 0006 0B       		.uleb128 0xb
 986 0007 03       		.uleb128 0x3
 987 0008 0E       		.uleb128 0xe
 988 0009 1B       		.uleb128 0x1b
 989 000a 0E       		.uleb128 0xe
 990 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 34


 991 000c 17       		.uleb128 0x17
 992 000d 11       		.uleb128 0x11
 993 000e 01       		.uleb128 0x1
 994 000f 10       		.uleb128 0x10
 995 0010 17       		.uleb128 0x17
 996 0011 00       		.byte	0
 997 0012 00       		.byte	0
 998 0013 02       		.uleb128 0x2
 999 0014 24       		.uleb128 0x24
 1000 0015 00       		.byte	0
 1001 0016 0B       		.uleb128 0xb
 1002 0017 0B       		.uleb128 0xb
 1003 0018 3E       		.uleb128 0x3e
 1004 0019 0B       		.uleb128 0xb
 1005 001a 03       		.uleb128 0x3
 1006 001b 0E       		.uleb128 0xe
 1007 001c 00       		.byte	0
 1008 001d 00       		.byte	0
 1009 001e 03       		.uleb128 0x3
 1010 001f 24       		.uleb128 0x24
 1011 0020 00       		.byte	0
 1012 0021 0B       		.uleb128 0xb
 1013 0022 0B       		.uleb128 0xb
 1014 0023 3E       		.uleb128 0x3e
 1015 0024 0B       		.uleb128 0xb
 1016 0025 03       		.uleb128 0x3
 1017 0026 08       		.uleb128 0x8
 1018 0027 00       		.byte	0
 1019 0028 00       		.byte	0
 1020 0029 04       		.uleb128 0x4
 1021 002a 16       		.uleb128 0x16
 1022 002b 00       		.byte	0
 1023 002c 03       		.uleb128 0x3
 1024 002d 0E       		.uleb128 0xe
 1025 002e 3A       		.uleb128 0x3a
 1026 002f 0B       		.uleb128 0xb
 1027 0030 3B       		.uleb128 0x3b
 1028 0031 0B       		.uleb128 0xb
 1029 0032 49       		.uleb128 0x49
 1030 0033 13       		.uleb128 0x13
 1031 0034 00       		.byte	0
 1032 0035 00       		.byte	0
 1033 0036 05       		.uleb128 0x5
 1034 0037 16       		.uleb128 0x16
 1035 0038 00       		.byte	0
 1036 0039 03       		.uleb128 0x3
 1037 003a 0E       		.uleb128 0xe
 1038 003b 3A       		.uleb128 0x3a
 1039 003c 0B       		.uleb128 0xb
 1040 003d 3B       		.uleb128 0x3b
 1041 003e 05       		.uleb128 0x5
 1042 003f 49       		.uleb128 0x49
 1043 0040 13       		.uleb128 0x13
 1044 0041 00       		.byte	0
 1045 0042 00       		.byte	0
 1046 0043 06       		.uleb128 0x6
 1047 0044 35       		.uleb128 0x35
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 35


 1048 0045 00       		.byte	0
 1049 0046 49       		.uleb128 0x49
 1050 0047 13       		.uleb128 0x13
 1051 0048 00       		.byte	0
 1052 0049 00       		.byte	0
 1053 004a 07       		.uleb128 0x7
 1054 004b 2E       		.uleb128 0x2e
 1055 004c 00       		.byte	0
 1056 004d 3F       		.uleb128 0x3f
 1057 004e 19       		.uleb128 0x19
 1058 004f 03       		.uleb128 0x3
 1059 0050 0E       		.uleb128 0xe
 1060 0051 3A       		.uleb128 0x3a
 1061 0052 0B       		.uleb128 0xb
 1062 0053 3B       		.uleb128 0x3b
 1063 0054 0B       		.uleb128 0xb
 1064 0055 27       		.uleb128 0x27
 1065 0056 19       		.uleb128 0x19
 1066 0057 11       		.uleb128 0x11
 1067 0058 01       		.uleb128 0x1
 1068 0059 12       		.uleb128 0x12
 1069 005a 06       		.uleb128 0x6
 1070 005b 40       		.uleb128 0x40
 1071 005c 18       		.uleb128 0x18
 1072 005d 9642     		.uleb128 0x2116
 1073 005f 19       		.uleb128 0x19
 1074 0060 00       		.byte	0
 1075 0061 00       		.byte	0
 1076 0062 08       		.uleb128 0x8
 1077 0063 2E       		.uleb128 0x2e
 1078 0064 01       		.byte	0x1
 1079 0065 3F       		.uleb128 0x3f
 1080 0066 19       		.uleb128 0x19
 1081 0067 03       		.uleb128 0x3
 1082 0068 0E       		.uleb128 0xe
 1083 0069 3A       		.uleb128 0x3a
 1084 006a 0B       		.uleb128 0xb
 1085 006b 3B       		.uleb128 0x3b
 1086 006c 0B       		.uleb128 0xb
 1087 006d 27       		.uleb128 0x27
 1088 006e 19       		.uleb128 0x19
 1089 006f 11       		.uleb128 0x11
 1090 0070 01       		.uleb128 0x1
 1091 0071 12       		.uleb128 0x12
 1092 0072 06       		.uleb128 0x6
 1093 0073 40       		.uleb128 0x40
 1094 0074 18       		.uleb128 0x18
 1095 0075 9642     		.uleb128 0x2116
 1096 0077 19       		.uleb128 0x19
 1097 0078 01       		.uleb128 0x1
 1098 0079 13       		.uleb128 0x13
 1099 007a 00       		.byte	0
 1100 007b 00       		.byte	0
 1101 007c 09       		.uleb128 0x9
 1102 007d 34       		.uleb128 0x34
 1103 007e 00       		.byte	0
 1104 007f 03       		.uleb128 0x3
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 36


 1105 0080 0E       		.uleb128 0xe
 1106 0081 3A       		.uleb128 0x3a
 1107 0082 0B       		.uleb128 0xb
 1108 0083 3B       		.uleb128 0x3b
 1109 0084 0B       		.uleb128 0xb
 1110 0085 49       		.uleb128 0x49
 1111 0086 13       		.uleb128 0x13
 1112 0087 02       		.uleb128 0x2
 1113 0088 18       		.uleb128 0x18
 1114 0089 00       		.byte	0
 1115 008a 00       		.byte	0
 1116 008b 0A       		.uleb128 0xa
 1117 008c 2E       		.uleb128 0x2e
 1118 008d 00       		.byte	0
 1119 008e 3F       		.uleb128 0x3f
 1120 008f 19       		.uleb128 0x19
 1121 0090 03       		.uleb128 0x3
 1122 0091 0E       		.uleb128 0xe
 1123 0092 3A       		.uleb128 0x3a
 1124 0093 0B       		.uleb128 0xb
 1125 0094 3B       		.uleb128 0x3b
 1126 0095 0B       		.uleb128 0xb
 1127 0096 27       		.uleb128 0x27
 1128 0097 19       		.uleb128 0x19
 1129 0098 11       		.uleb128 0x11
 1130 0099 01       		.uleb128 0x1
 1131 009a 12       		.uleb128 0x12
 1132 009b 06       		.uleb128 0x6
 1133 009c 40       		.uleb128 0x40
 1134 009d 18       		.uleb128 0x18
 1135 009e 9742     		.uleb128 0x2117
 1136 00a0 19       		.uleb128 0x19
 1137 00a1 00       		.byte	0
 1138 00a2 00       		.byte	0
 1139 00a3 0B       		.uleb128 0xb
 1140 00a4 2E       		.uleb128 0x2e
 1141 00a5 01       		.byte	0x1
 1142 00a6 3F       		.uleb128 0x3f
 1143 00a7 19       		.uleb128 0x19
 1144 00a8 03       		.uleb128 0x3
 1145 00a9 0E       		.uleb128 0xe
 1146 00aa 3A       		.uleb128 0x3a
 1147 00ab 0B       		.uleb128 0xb
 1148 00ac 3B       		.uleb128 0x3b
 1149 00ad 05       		.uleb128 0x5
 1150 00ae 27       		.uleb128 0x27
 1151 00af 19       		.uleb128 0x19
 1152 00b0 11       		.uleb128 0x11
 1153 00b1 01       		.uleb128 0x1
 1154 00b2 12       		.uleb128 0x12
 1155 00b3 06       		.uleb128 0x6
 1156 00b4 40       		.uleb128 0x40
 1157 00b5 18       		.uleb128 0x18
 1158 00b6 9742     		.uleb128 0x2117
 1159 00b8 19       		.uleb128 0x19
 1160 00b9 01       		.uleb128 0x1
 1161 00ba 13       		.uleb128 0x13
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 37


 1162 00bb 00       		.byte	0
 1163 00bc 00       		.byte	0
 1164 00bd 0C       		.uleb128 0xc
 1165 00be 05       		.uleb128 0x5
 1166 00bf 00       		.byte	0
 1167 00c0 03       		.uleb128 0x3
 1168 00c1 0E       		.uleb128 0xe
 1169 00c2 3A       		.uleb128 0x3a
 1170 00c3 0B       		.uleb128 0xb
 1171 00c4 3B       		.uleb128 0x3b
 1172 00c5 05       		.uleb128 0x5
 1173 00c6 49       		.uleb128 0x49
 1174 00c7 13       		.uleb128 0x13
 1175 00c8 02       		.uleb128 0x2
 1176 00c9 18       		.uleb128 0x18
 1177 00ca 00       		.byte	0
 1178 00cb 00       		.byte	0
 1179 00cc 0D       		.uleb128 0xd
 1180 00cd 2E       		.uleb128 0x2e
 1181 00ce 00       		.byte	0
 1182 00cf 3F       		.uleb128 0x3f
 1183 00d0 19       		.uleb128 0x19
 1184 00d1 03       		.uleb128 0x3
 1185 00d2 0E       		.uleb128 0xe
 1186 00d3 3A       		.uleb128 0x3a
 1187 00d4 0B       		.uleb128 0xb
 1188 00d5 3B       		.uleb128 0x3b
 1189 00d6 05       		.uleb128 0x5
 1190 00d7 27       		.uleb128 0x27
 1191 00d8 19       		.uleb128 0x19
 1192 00d9 49       		.uleb128 0x49
 1193 00da 13       		.uleb128 0x13
 1194 00db 11       		.uleb128 0x11
 1195 00dc 01       		.uleb128 0x1
 1196 00dd 12       		.uleb128 0x12
 1197 00de 06       		.uleb128 0x6
 1198 00df 40       		.uleb128 0x40
 1199 00e0 18       		.uleb128 0x18
 1200 00e1 9742     		.uleb128 0x2117
 1201 00e3 19       		.uleb128 0x19
 1202 00e4 00       		.byte	0
 1203 00e5 00       		.byte	0
 1204 00e6 0E       		.uleb128 0xe
 1205 00e7 2E       		.uleb128 0x2e
 1206 00e8 01       		.byte	0x1
 1207 00e9 3F       		.uleb128 0x3f
 1208 00ea 19       		.uleb128 0x19
 1209 00eb 03       		.uleb128 0x3
 1210 00ec 0E       		.uleb128 0xe
 1211 00ed 3A       		.uleb128 0x3a
 1212 00ee 0B       		.uleb128 0xb
 1213 00ef 3B       		.uleb128 0x3b
 1214 00f0 05       		.uleb128 0x5
 1215 00f1 27       		.uleb128 0x27
 1216 00f2 19       		.uleb128 0x19
 1217 00f3 49       		.uleb128 0x49
 1218 00f4 13       		.uleb128 0x13
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 38


 1219 00f5 11       		.uleb128 0x11
 1220 00f6 01       		.uleb128 0x1
 1221 00f7 12       		.uleb128 0x12
 1222 00f8 06       		.uleb128 0x6
 1223 00f9 40       		.uleb128 0x40
 1224 00fa 18       		.uleb128 0x18
 1225 00fb 9742     		.uleb128 0x2117
 1226 00fd 19       		.uleb128 0x19
 1227 00fe 01       		.uleb128 0x1
 1228 00ff 13       		.uleb128 0x13
 1229 0100 00       		.byte	0
 1230 0101 00       		.byte	0
 1231 0102 0F       		.uleb128 0xf
 1232 0103 34       		.uleb128 0x34
 1233 0104 00       		.byte	0
 1234 0105 03       		.uleb128 0x3
 1235 0106 0E       		.uleb128 0xe
 1236 0107 3A       		.uleb128 0x3a
 1237 0108 0B       		.uleb128 0xb
 1238 0109 3B       		.uleb128 0x3b
 1239 010a 05       		.uleb128 0x5
 1240 010b 49       		.uleb128 0x49
 1241 010c 13       		.uleb128 0x13
 1242 010d 02       		.uleb128 0x2
 1243 010e 18       		.uleb128 0x18
 1244 010f 00       		.byte	0
 1245 0110 00       		.byte	0
 1246 0111 10       		.uleb128 0x10
 1247 0112 34       		.uleb128 0x34
 1248 0113 00       		.byte	0
 1249 0114 03       		.uleb128 0x3
 1250 0115 0E       		.uleb128 0xe
 1251 0116 3A       		.uleb128 0x3a
 1252 0117 0B       		.uleb128 0xb
 1253 0118 3B       		.uleb128 0x3b
 1254 0119 0B       		.uleb128 0xb
 1255 011a 49       		.uleb128 0x49
 1256 011b 13       		.uleb128 0x13
 1257 011c 3F       		.uleb128 0x3f
 1258 011d 19       		.uleb128 0x19
 1259 011e 02       		.uleb128 0x2
 1260 011f 18       		.uleb128 0x18
 1261 0120 00       		.byte	0
 1262 0121 00       		.byte	0
 1263 0122 00       		.byte	0
 1264              		.section	.debug_aranges,"",%progbits
 1265 0000 8C000000 		.4byte	0x8c
 1266 0004 0200     		.2byte	0x2
 1267 0006 00000000 		.4byte	.Ldebug_info0
 1268 000a 04       		.byte	0x4
 1269 000b 00       		.byte	0
 1270 000c 0000     		.2byte	0
 1271 000e 0000     		.2byte	0
 1272 0010 00000000 		.4byte	.LFB0
 1273 0014 20000000 		.4byte	.LFE0-.LFB0
 1274 0018 00000000 		.4byte	.LFB1
 1275 001c 68000000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 39


 1276 0020 00000000 		.4byte	.LFB2
 1277 0024 20000000 		.4byte	.LFE2-.LFB2
 1278 0028 00000000 		.4byte	.LFB3
 1279 002c 20000000 		.4byte	.LFE3-.LFB3
 1280 0030 00000000 		.4byte	.LFB4
 1281 0034 20000000 		.4byte	.LFE4-.LFB4
 1282 0038 00000000 		.4byte	.LFB5
 1283 003c 20000000 		.4byte	.LFE5-.LFB5
 1284 0040 00000000 		.4byte	.LFB6
 1285 0044 20000000 		.4byte	.LFE6-.LFB6
 1286 0048 00000000 		.4byte	.LFB7
 1287 004c 20000000 		.4byte	.LFE7-.LFB7
 1288 0050 00000000 		.4byte	.LFB8
 1289 0054 20000000 		.4byte	.LFE8-.LFB8
 1290 0058 00000000 		.4byte	.LFB9
 1291 005c 20000000 		.4byte	.LFE9-.LFB9
 1292 0060 00000000 		.4byte	.LFB10
 1293 0064 20000000 		.4byte	.LFE10-.LFB10
 1294 0068 00000000 		.4byte	.LFB11
 1295 006c 18000000 		.4byte	.LFE11-.LFB11
 1296 0070 00000000 		.4byte	.LFB12
 1297 0074 18000000 		.4byte	.LFE12-.LFB12
 1298 0078 00000000 		.4byte	.LFB13
 1299 007c 18000000 		.4byte	.LFE13-.LFB13
 1300 0080 00000000 		.4byte	.LFB14
 1301 0084 18000000 		.4byte	.LFE14-.LFB14
 1302 0088 00000000 		.4byte	0
 1303 008c 00000000 		.4byte	0
 1304              		.section	.debug_ranges,"",%progbits
 1305              	.Ldebug_ranges0:
 1306 0000 00000000 		.4byte	.LFB0
 1307 0004 20000000 		.4byte	.LFE0
 1308 0008 00000000 		.4byte	.LFB1
 1309 000c 68000000 		.4byte	.LFE1
 1310 0010 00000000 		.4byte	.LFB2
 1311 0014 20000000 		.4byte	.LFE2
 1312 0018 00000000 		.4byte	.LFB3
 1313 001c 20000000 		.4byte	.LFE3
 1314 0020 00000000 		.4byte	.LFB4
 1315 0024 20000000 		.4byte	.LFE4
 1316 0028 00000000 		.4byte	.LFB5
 1317 002c 20000000 		.4byte	.LFE5
 1318 0030 00000000 		.4byte	.LFB6
 1319 0034 20000000 		.4byte	.LFE6
 1320 0038 00000000 		.4byte	.LFB7
 1321 003c 20000000 		.4byte	.LFE7
 1322 0040 00000000 		.4byte	.LFB8
 1323 0044 20000000 		.4byte	.LFE8
 1324 0048 00000000 		.4byte	.LFB9
 1325 004c 20000000 		.4byte	.LFE9
 1326 0050 00000000 		.4byte	.LFB10
 1327 0054 20000000 		.4byte	.LFE10
 1328 0058 00000000 		.4byte	.LFB11
 1329 005c 18000000 		.4byte	.LFE11
 1330 0060 00000000 		.4byte	.LFB12
 1331 0064 18000000 		.4byte	.LFE12
 1332 0068 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 40


 1333 006c 18000000 		.4byte	.LFE13
 1334 0070 00000000 		.4byte	.LFB14
 1335 0074 18000000 		.4byte	.LFE14
 1336 0078 00000000 		.4byte	0
 1337 007c 00000000 		.4byte	0
 1338              		.section	.debug_line,"",%progbits
 1339              	.Ldebug_line0:
 1340 0000 69010000 		.section	.debug_str,"MS",%progbits,1
 1340      02004200 
 1340      00000201 
 1340      FB0E0D00 
 1340      01010101 
 1341              	.LASF15:
 1342 0000 72656731 		.ascii	"reg16\000"
 1342      3600
 1343              	.LASF18:
 1344 0006 50574D5F 		.ascii	"PWM_1_Enable\000"
 1344      315F456E 
 1344      61626C65 
 1344      00
 1345              	.LASF21:
 1346 0013 50574D5F 		.ascii	"PWM_1_WriteCounter\000"
 1346      315F5772 
 1346      69746543 
 1346      6F756E74 
 1346      657200
 1347              	.LASF24:
 1348 0026 70657269 		.ascii	"period\000"
 1348      6F6400
 1349              	.LASF34:
 1350 002d 50574D5F 		.ascii	"PWM_1_ReadCompare1\000"
 1350      315F5265 
 1350      6164436F 
 1350      6D706172 
 1350      653100
 1351              	.LASF35:
 1352 0040 50574D5F 		.ascii	"PWM_1_ReadCompare2\000"
 1352      315F5265 
 1352      6164436F 
 1352      6D706172 
 1352      653200
 1353              	.LASF3:
 1354 0053 73686F72 		.ascii	"short unsigned int\000"
 1354      7420756E 
 1354      7369676E 
 1354      65642069 
 1354      6E7400
 1355              	.LASF25:
 1356 0066 50574D5F 		.ascii	"PWM_1_WriteCompare1\000"
 1356      315F5772 
 1356      69746543 
 1356      6F6D7061 
 1356      72653100 
 1357              	.LASF27:
 1358 007a 50574D5F 		.ascii	"PWM_1_WriteCompare2\000"
 1358      315F5772 
 1358      69746543 
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 41


 1358      6F6D7061 
 1358      72653200 
 1359              	.LASF11:
 1360 008e 666C6F61 		.ascii	"float\000"
 1360      7400
 1361              	.LASF23:
 1362 0094 636F756E 		.ascii	"counter\000"
 1362      74657200 
 1363              	.LASF1:
 1364 009c 756E7369 		.ascii	"unsigned char\000"
 1364      676E6564 
 1364      20636861 
 1364      7200
 1365              	.LASF14:
 1366 00aa 72656738 		.ascii	"reg8\000"
 1366      00
 1367              	.LASF36:
 1368 00af 50574D5F 		.ascii	"PWM_1_ReadPeriod\000"
 1368      315F5265 
 1368      61645065 
 1368      72696F64 
 1368      00
 1369              	.LASF5:
 1370 00c0 6C6F6E67 		.ascii	"long unsigned int\000"
 1370      20756E73 
 1370      69676E65 
 1370      6420696E 
 1370      7400
 1371              	.LASF9:
 1372 00d2 75696E74 		.ascii	"uint8\000"
 1372      3800
 1373              	.LASF31:
 1374 00d8 636F6E74 		.ascii	"control\000"
 1374      726F6C00 
 1375              	.LASF37:
 1376 00e0 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1376      4320342E 
 1376      392E3320 
 1376      32303135 
 1376      30333033 
 1377 0113 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1377      20726576 
 1377      6973696F 
 1377      6E203232 
 1377      31323230 
 1378 0146 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1378      66756E63 
 1378      74696F6E 
 1378      2D736563 
 1378      74696F6E 
 1379              	.LASF12:
 1380 016e 646F7562 		.ascii	"double\000"
 1380      6C6500
 1381              	.LASF41:
 1382 0175 50574D5F 		.ascii	"PWM_1_initVar\000"
 1382      315F696E 
 1382      69745661 
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 42


 1382      7200
 1383              	.LASF2:
 1384 0183 73686F72 		.ascii	"short int\000"
 1384      7420696E 
 1384      7400
 1385              	.LASF33:
 1386 018d 50574D5F 		.ascii	"PWM_1_ReadCapture\000"
 1386      315F5265 
 1386      61644361 
 1386      70747572 
 1386      6500
 1387              	.LASF10:
 1388 019f 75696E74 		.ascii	"uint16\000"
 1388      313600
 1389              	.LASF20:
 1390 01a6 50574D5F 		.ascii	"PWM_1_Init\000"
 1390      315F496E 
 1390      697400
 1391              	.LASF8:
 1392 01b1 756E7369 		.ascii	"unsigned int\000"
 1392      676E6564 
 1392      20696E74 
 1392      00
 1393              	.LASF7:
 1394 01be 6C6F6E67 		.ascii	"long long unsigned int\000"
 1394      206C6F6E 
 1394      6720756E 
 1394      7369676E 
 1394      65642069 
 1395              	.LASF38:
 1396 01d5 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM_1.c\000"
 1396      72617465 
 1396      645F536F 
 1396      75726365 
 1396      5C50536F 
 1397              	.LASF29:
 1398 01f4 72657375 		.ascii	"result\000"
 1398      6C7400
 1399              	.LASF28:
 1400 01fb 6374726C 		.ascii	"ctrl\000"
 1400      00
 1401              	.LASF16:
 1402 0200 73697A65 		.ascii	"sizetype\000"
 1402      74797065 
 1402      00
 1403              	.LASF6:
 1404 0209 6C6F6E67 		.ascii	"long long int\000"
 1404      206C6F6E 
 1404      6720696E 
 1404      7400
 1405              	.LASF40:
 1406 0217 50574D5F 		.ascii	"PWM_1_ReadControlRegister\000"
 1406      315F5265 
 1406      6164436F 
 1406      6E74726F 
 1406      6C526567 
 1407              	.LASF30:
ARM GAS  C:\Users\DGILLI~1\AppData\Local\Temp\ccoYRDEe.s 			page 43


 1408 0231 50574D5F 		.ascii	"PWM_1_WriteControlRegister\000"
 1408      315F5772 
 1408      69746543 
 1408      6F6E7472 
 1408      6F6C5265 
 1409              	.LASF22:
 1410 024c 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 1410      315F5772 
 1410      69746550 
 1410      6572696F 
 1410      6400
 1411              	.LASF39:
 1412 025e 433A5C55 		.ascii	"C:\\Users\\DGilliland\\Documents\\GitHub\\LB-RPPSOC"
 1412      73657273 
 1412      5C444769 
 1412      6C6C696C 
 1412      616E645C 
 1413 028c 5C434539 		.ascii	"\\CE95352 Blinking LED\\CE95352 Blinking LED.cydsn\000"
 1413      35333532 
 1413      20426C69 
 1413      6E6B696E 
 1413      67204C45 
 1414              	.LASF32:
 1415 02bd 50574D5F 		.ascii	"PWM_1_ReadCounter\000"
 1415      315F5265 
 1415      6164436F 
 1415      756E7465 
 1415      7200
 1416              	.LASF19:
 1417 02cf 50574D5F 		.ascii	"PWM_1_Stop\000"
 1417      315F5374 
 1417      6F7000
 1418              	.LASF4:
 1419 02da 6C6F6E67 		.ascii	"long int\000"
 1419      20696E74 
 1419      00
 1420              	.LASF13:
 1421 02e3 63686172 		.ascii	"char\000"
 1421      00
 1422              	.LASF0:
 1423 02e8 7369676E 		.ascii	"signed char\000"
 1423      65642063 
 1423      68617200 
 1424              	.LASF26:
 1425 02f4 636F6D70 		.ascii	"compare\000"
 1425      61726500 
 1426              	.LASF17:
 1427 02fc 50574D5F 		.ascii	"PWM_1_Start\000"
 1427      315F5374 
 1427      61727400 
 1428              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
